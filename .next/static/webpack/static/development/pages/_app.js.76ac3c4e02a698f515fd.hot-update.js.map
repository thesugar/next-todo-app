{"version":3,"file":"static/webpack/static/development/pages/_app.js.76ac3c4e02a698f515fd.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n    authDomain: \"polished-leaf-256709.firebaseapp.com\",\n    databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n    projectId: \"polished-leaf-256709\",\n    storageBucket: \"polished-leaf-256709.appspot.com\",\n    messagingSenderId: \"766279430691\",\n    appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n    measurementId: \"G-6M2NQ68H20\"\n};\n\n// Initialize Firebase\nlet fireapp;\n\ntry {\n    fireapp = firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n} catch (error) {\n    console.log(error.message);\n}\n\nexport default fireapp;\n\nlet initial;\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    // User is signed in.\n    console.log('currentUserあり！')\n    console.log(firebase.auth().currentUser.displayName)\n  } else {\n    // No user is signed in.\n    console.log('currentUserなし！')\n    initial = {\n        login : false,\n        username : 'unknown',\n        email : '',\n        data: [],\n        items: []\n    }\n  }\n});\n\nvar auth = () => {        \n    return new Promise((resolve, reject) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                var user_info = user_info || firebase.auth().currentUser;\n                console.log(user_info);//ここでは取れる\n                resolve(user_info);\n            } else {\n                console.log('// No user is signed in.');\n                reject({\n                    message: 'APIにアクセスできませんでした'\n                });\n            }\n        });\n    });\n};\n\nauth().then((userInfo) =>{\n    initial = {\n        login: true,\n        username: userInfo.displayName,\n    }\n})\n\n\n// reducer\nfunction fireReducer (state = initial, action) {\n    switch (action.type){\n        // dummy\n        case 'UPDATE_USER':\n            return action.value;\n        // default\n        default:\n            return state;\n    }\n}\n\n// initStore function\nfunction initStore(state = initial) {\n    return createStore(fireReducer, state,\n        applyMiddleware(thunkMiddleware));}\n\nexport { initStore };"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAQA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;A","sourceRoot":""}