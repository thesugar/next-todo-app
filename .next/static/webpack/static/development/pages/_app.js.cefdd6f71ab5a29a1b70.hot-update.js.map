{"version":3,"file":"static/webpack/static/development/pages/_app.js.cefdd6f71ab5a29a1b70.hot-update.js","sources":["webpack:///./lib/redux-store.js"],"sourcesContent":["import { Component } from 'react';\nimport {initStore} from '../store';\nimport firebase from \"firebase\";\n\nconst isServer = typeof window === 'undefined';\nconst _NRS_ = '__NEXT_REDUX_STORE__';\n\nvar auth = () => {        \n    return new Promise((resolve, reject) => {\n        firebase.auth().onAuthStateChanged((user) => {\n            if (user) {\n                var user_info = user_info || firebase.auth().currentUser;\n                console.log(user_info);//ここでは取れる\n                resolve(user_info);\n            } else {\n                console.log('// No user is signed in.');\n                reject({\n                    message: 'APIにアクセスできませんでした'\n                });\n            }\n        });\n    });\n};\n\nfunction getOrCreateStore (initialState) {\n    //auth().then(()=>{\n    if (isServer) {\n        return initStore(initialState);\n    }\n\n    if (!window[_NRS_]) {\n        //console.log('**check**')\n        //console.log(auth());\n        //initialState['login'] = auth() ? true : false;\n        //initialState['username'] = auth() ? auth().displayName : 'Guest';\n        window[_NRS_] = initStore(initialState);\n    }\n\n    return window[_NRS_];//});\n}\n\nexport default (App) => {\n    return class AppWithRedux extends Component {\n\n        static async getInitialProps (appContext) {\n            const reduxStore = await getOrCreateStore();\n            appContext.ctx.reduxStore = reduxStore;\n            let appProps = {};\n            if (typeof App.getInitialProps === 'function') {\n                appProps = await App.getInitialProps(appContext);\n            }\n            return {\n                ...appProps,\n                initialReduxState: reduxStore.getState()\n            }\n        }\n\n        constructor (props) {\n            super(props)\n            this.reduxStore = getOrCreateStore (props.initialReduxState)\n        }\n\n        render () {\n            return <App {...this.props}\n                reduxStore={this.reduxStore} />\n        }\n    }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAOA;AACA;AARA;AAAA;AAWA;AAXA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAcA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;AAnBA;AAAA;AAAA;AAqBA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAvBA;AACA;AADA;AAAA;AAAA;AAyBA;;;;A","sourceRoot":""}