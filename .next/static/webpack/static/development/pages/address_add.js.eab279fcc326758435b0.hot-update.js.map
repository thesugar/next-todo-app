{"version":3,"file":"static/webpack/static/development/pages/address_add.js.eab279fcc326758435b0.hot-update.js","sources":["webpack:///./components/AddressAdd.js"],"sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass AddressAdd extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        if (this.props.login == false) {\n            Router.push('/address');\n        }\n        this.state = {\n            title: '',\n            detail: '',\n            deadline: '',\n            concerns: '',\n            message: 'タスクを追加するには以下を入力してください'\n        }\n        this.logined = this.logined.bind(this);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDetail = this.onChangeDetail.bind(this);\n        this.onChangeDeadline = this.onChangeDeadline.bind(this);\n        this.onChangeConcerns = this.onChangeConcerns.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // フィールド入力処理\n    onChangeTitle(e) {\n        this.setState({title: e.target.value});\n    }\n\n    onChangeDetail(e){\n        this.setState({detail: e.target.value});\n    }\n\n    onChangeDeadline(e){\n        this.setState({deadline: e.target.value});\n    }\n\n    onChangeConcerns(e){\n        this.setState({concerns: e.target.value});\n    }\n\n    // データの登録処理\n    doAction(e){\n        \n        let db = firebase.firestore();\n        // Firestore の登録処理\n        db.collection('tasks').add({\n            title: this.state.title,\n            detail: firebase.firestore.Timestamp.fromDate(new Date(this.state.detail)),\n            deadline: this.state.deadline,\n            concerns: this.state.concerns,\n            publisher: firebase.auth().currentUser.uid,\n            state : 'doing'\n        })\n        .then((doc) => {\n            console.log(`追加に成功しました (${doc.id})`);\n        })\n        .catch((error) => {\n            console.log(`追加に失敗しました (${error})`);\n        });\n\n        this.setState({\n            title: '',\n            detail: '',\n            deadline: '',\n            concerns: '',\n            message: '登録しました。'\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <Account self={this} onLogined={this.logined}\n                onLogouted={this.logouted} />\n                <hr />\n                <p>{this.state.message}</p>\n                {this.props.login\n                ?\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>タスク名:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.title}\n                            onChange={this.onChangeTitle}/></td>\n                        </tr>\n                        <tr>\n                            <th>タスク詳細:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.detail}\n                            onChange={this.onChangeDetail}/></td>\n                        </tr>\n                        <tr>\n                            <th>期限:</th>\n                            <td><input type=\"date\" size=\"30\"\n                            value={this.state.deadline}\n                            onChange={this.onChangeDeadline}/></td>\n                        </tr>\n                        <tr>\n                            <th>グループ:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.concerns}\n                            onChange={this.onChangeConcerns}/></td>\n                        </tr>\n                        <tr>\n                            <th></th>\n                            <td><button onClick={this.doAction}>\n                                登録</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n                :\n                <p>please login...</p>\n                }\n            </div>\n        );\n    }\n}\n\nAddressAdd = connect((state) => state) (AddressAdd);\nexport default AddressAdd;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAMA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAJA;AACA;AAFA;AACA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAjBA;AAkBA;AACA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;;;AAEA;AACA;AAAA;AAAA;AACA;AACA;;;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAhIA;AACA;AAkIA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}