{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/AddressShow.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n  constructor(props) {\n    super(props); //if (this.props.login == false){\n    //    Router.push('/address');\n    //}\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.state = {\n      last: -1,\n      input: '',\n      //    email: Router.query.email,\n      address: null,\n      message: Router.query.email + 'のデータ'\n    };\n    this.logined = this.logined.bind(this);\n    this.doChange = this.doChange.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // アドレスデータの検索\n\n\n  getAddress(email) {\n    let db = firebase.firestore();\n  } // フィールド入力\n\n\n  doChange(e) {\n    this.setState({\n      input: e.target.value\n    });\n  } // メッセージ送信処理\n\n\n  doAction() {\n    let from = Lib.encodeEmail(this.props.email);\n    let to = Lib.encodeEmail(this.state.email);\n    let db = firebase.firestore();\n    let d = new Date().getTime();\n  }\n\n  render() {\n    if (this.state.address == null) {\n      this.getAddress(Router.query.email);\n    }\n\n    let items = [];\n\n    if (this.state.address != null) {\n      for (let n in this.state.address.messages) {\n        items.unshift(__jsx(\"li\", {\n          key: n,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, this.state.address.messages[n]));\n      }\n    }\n\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, this.state.message), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), this.state.message != null ? __jsx(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"NAME\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, this.state.name)), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"MAIL\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.email)), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"TEL\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.tel)), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"NEMO\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, this.state.memo)))) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"no-address\"), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), __jsx(\"fieldset\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Message: \"), __jsx(\"input\", {\n      type: \"text\",\n      size: \"40\",\n      value: this.state.input,\n      onChange: this.doChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }), __jsx(\"button\", {\n      onClick: this.doAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"send\")), this.state.address != null && this.state.address.messages != null ? __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"\\u203B\", this.state.address.name, \"\\u3055\\u3093\\u3068\\u306E\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\"), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, items)) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\u203B\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u306F\\u3042\\u308A\\u307E\\u305B\\u3093\\u3002\"));\n  }\n\n}\n\nAddressShow = connect(state => state)(AddressShow);\nexport default AddressShow;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/AddressShow.js"],"names":["React","Component","connect","firebase","Lib","Account","Router","AddressShow","constructor","props","fontSize","padding","state","last","input","address","message","query","email","logined","bind","doChange","doAction","console","log","logouted","push","getAddress","db","firestore","e","setState","target","value","from","encodeEmail","to","d","Date","getTime","render","items","n","messages","unshift","name","tel","memo"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Router from 'next/router';\n\nclass AddressShow extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        //if (this.props.login == false){\n        //    Router.push('/address');\n        //}\n        this.state = {\n            last: -1,\n            input: '',\n        //    email: Router.query.email,\n            address: null,\n            message: Router.query.email + 'のデータ'\n        }\n        this.logined = this.logined.bind(this);\n        this.doChange = this.doChange.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.')\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // アドレスデータの検索\n    getAddress(email){\n        let db = firebase.firestore();\n\n    }\n\n    // フィールド入力\n    doChange(e){\n        this.setState({\n            input: e.target.value\n        });\n    }\n\n    // メッセージ送信処理\n    doAction(){\n        let from = Lib.encodeEmail(this.props.email);\n        let to = Lib.encodeEmail(this.state.email);\n        let db = firebase.firestore();\n        let d = new Date().getTime();\n        \n    }\n\n    render(){\n        if (this.state.address == null){\n            this.getAddress(Router.query.email);\n        }\n        let items = [];\n        if (this.state.address != null){\n            for(let n in this.state.address.messages){\n                items.unshift(<li key={n}>\n                    {this.state.address.messages[n]}\n                    </li>);\n            }\n        }\n\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                onLogouted={this.logouted} />\n                <p>{this.state.message}</p>\n                <hr />\n                {this.state.message != null\n                ?\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>NAME</th>\n                            <td>{this.state.name}</td>\n                        </tr>\n                        <tr>\n                            <th>MAIL</th>\n                            <td>{this.state.email}</td>\n                        </tr>\n                        <tr>\n                            <th>TEL</th>\n                            <td>{this.state.tel}</td>\n                        </tr>\n                        <tr>\n                            <th>NEMO</th>\n                            <td>{this.state.memo}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                :\n                <p>no-address</p>\n                }\n                <hr />\n                <fieldset>\n                    <p>Message: </p>\n                    <input type=\"text\" size=\"40\"\n                    value={this.state.input}\n                    onChange={this.doChange} />\n                    <button onClick={this.doAction}>send</button>\n                </fieldset>\n                {this.state.address != null &&\n                this.state.address.messages != null\n                ?\n                <div>\n                    <p>※{this.state.address.name}さんとのメッセージ</p>\n                    <ul>{items}</ul>\n                </div>\n                :\n                <p>※メッセージはありません。</p>\n                }\n            </div>\n        );\n    }\n}\n\nAddressShow = connect((state) => state)(AddressShow);\nexport default AddressShow;"]},"metadata":{},"sourceType":"module"}