{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n  authDomain: \"polished-leaf-256709.firebaseapp.com\",\n  databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n  projectId: \"polished-leaf-256709\",\n  storageBucket: \"polished-leaf-256709.appspot.com\",\n  messagingSenderId: \"766279430691\",\n  appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n  measurementId: \"G-6M2NQ68H20\"\n}; // Initialize Firebase\n\nvar fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp;\nvar self = this;\nfirebase.auth().onAuthStateChanged(function (user) {\n  if (user) {\n    // User is signed in.\n    console.log('currentUserあり！');\n    console.log(firebase.auth().currentUser.displayName);\n    self.initial = {\n      login: true,\n      username: firebase.auth().currentUser.displayName,\n      email: firebase.auth().currentUser.email,\n      data: [],\n      items: []\n    };\n  } else {\n    // No user is signed in.\n    console.log('currentUserなし！');\n    self.initial = {\n      login: false,\n      username: 'Guest',\n      email: '',\n      data: [],\n      items: []\n    };\n  }\n}); // ここで待たせても意味ない。。。\n\nfunction sleep(waitMsec) {\n  var startMsec = new Date();\n  console.log('sleeping...'); // 指定ミリ秒間だけループさせる（CPUは常にビジー状態）\n\n  while (new Date() - startMsec < waitMsec) {\n    ;\n  }\n}\n\nsleep(1000);\nconsole.log(\"initial is\");\nconsole.log(self.initial); // reducer\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // dummy\n    case 'UPDATE_USER':\n      return action.value;\n    // default\n\n    default:\n      return state;\n  }\n} // initStore function\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","analytics","error","console","log","message","self","auth","onAuthStateChanged","user","currentUser","displayName","initial","login","username","email","data","items","sleep","waitMsec","startMsec","Date","fireReducer","state","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,sCAFO;AAGnBC,EAAAA,WAAW,EAAE,6CAHM;AAInBC,EAAAA,SAAS,EAAE,sBAJQ;AAKnBC,EAAAA,aAAa,EAAE,kCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB,C,CAWA;;AACA,IAAIC,OAAJ;;AAEA,IAAI;AACAA,EAAAA,OAAO,GAAGV,QAAQ,CAACW,aAAT,CAAuBV,cAAvB,CAAV;AACAD,EAAAA,QAAQ,CAACY,SAAT;AACH,CAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AAED,eAAeN,OAAf;AAGA,IAAIO,IAAI,GAAG,IAAX;AACAjB,QAAQ,CAACkB,IAAT,GAAgBC,kBAAhB,CAAmC,UAAAC,IAAI,EAAI;AACzC,MAAIA,IAAJ,EAAU;AACR;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYf,QAAQ,CAACkB,IAAT,GAAgBG,WAAhB,CAA4BC,WAAxC;AACAL,IAAAA,IAAI,CAACM,OAAL,GAAe;AACXC,MAAAA,KAAK,EAAG,IADG;AAEXC,MAAAA,QAAQ,EAAGzB,QAAQ,CAACkB,IAAT,GAAgBG,WAAhB,CAA4BC,WAF5B;AAGXI,MAAAA,KAAK,EAAG1B,QAAQ,CAACkB,IAAT,GAAgBG,WAAhB,CAA4BK,KAHzB;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAf;AAOD,GAXD,MAWO;AACL;AACAd,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAE,IAAAA,IAAI,CAACM,OAAL,GAAe;AACXC,MAAAA,KAAK,EAAG,KADG;AAEXC,MAAAA,QAAQ,EAAG,OAFA;AAGXC,MAAAA,KAAK,EAAG,EAHG;AAIXC,MAAAA,IAAI,EAAE,EAJK;AAKXC,MAAAA,KAAK,EAAE;AALI,KAAf;AAOD;AACF,CAvBD,E,CAyBA;;AACA,SAASC,KAAT,CAAeC,QAAf,EAAyB;AACrB,MAAIC,SAAS,GAAG,IAAIC,IAAJ,EAAhB;AACAlB,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAFqB,CAGrB;;AACA,SAAO,IAAIiB,IAAJ,KAAaD,SAAb,GAAyBD,QAAhC;AAAyC;AAAzC;AACH;;AAEDD,KAAK,CAAC,IAAD,CAAL;AAEAf,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACM,OAAjB,E,CAGA;;AACA,SAASU,WAAT,GAAoD;AAAA,MAA9BC,KAA8B,uEAAtBjB,IAAI,CAACM,OAAiB;AAAA,MAARY,MAAQ;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,aAAL;AACI,aAAOD,MAAM,CAACE,KAAd;AACJ;;AACA;AACI,aAAOH,KAAP;AANR;AAQH,C,CAED;;;AACA,OAAO,SAASI,SAAT,GAAyC;AAAA,MAAtBJ,KAAsB,uEAAdjB,IAAI,CAACM,OAAS;AAC5C,SAAO1B,WAAW,CAACoC,WAAD,EAAcC,KAAd,EACdpC,eAAe,CAACC,eAAD,CADD,CAAlB;AACuC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n    authDomain: \"polished-leaf-256709.firebaseapp.com\",\n    databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n    projectId: \"polished-leaf-256709\",\n    storageBucket: \"polished-leaf-256709.appspot.com\",\n    messagingSenderId: \"766279430691\",\n    appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n    measurementId: \"G-6M2NQ68H20\"\n};\n\n// Initialize Firebase\nlet fireapp;\n\ntry {\n    fireapp = firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n} catch (error) {\n    console.log(error.message);\n}\n\nexport default fireapp;\n\n\nlet self = this;\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    // User is signed in.\n    console.log('currentUserあり！')\n    console.log(firebase.auth().currentUser.displayName)\n    self.initial = {\n        login : true,\n        username : firebase.auth().currentUser.displayName,\n        email : firebase.auth().currentUser.email,\n        data: [],\n        items: []\n    }\n  } else {\n    // No user is signed in.\n    console.log('currentUserなし！')\n    self.initial = {\n        login : false,\n        username : 'Guest',\n        email : '',\n        data: [],\n        items: []\n    }\n  }\n});\n\n// ここで待たせても意味ない。。。\nfunction sleep(waitMsec) {\n    var startMsec = new Date();\n    console.log('sleeping...')\n    // 指定ミリ秒間だけループさせる（CPUは常にビジー状態）\n    while (new Date() - startMsec < waitMsec);\n}\n   \nsleep(1000);\n\nconsole.log(\"initial is\")\nconsole.log(self.initial);\n\n\n// reducer\nfunction fireReducer (state = self.initial, action) {\n    switch (action.type){\n        // dummy\n        case 'UPDATE_USER':\n            return action.value;\n        // default\n        default:\n            return state;\n    }\n}\n\n// initStore function\nexport function initStore(state = self.initial) {\n    return createStore(fireReducer, state,\n        applyMiddleware(thunkMiddleware));}"]},"metadata":{},"sourceType":"module"}