{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/Address.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nvar Address =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Address, _Component);\n\n  function Address(props) {\n    var _this;\n\n    _classCallCheck(this, Address);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Address).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(Address, [{\n    key: \"logined\",\n    value: function logined() {\n      this.getFireData();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/address');\n    } // get data from Firebase\n\n  }, {\n    key: \"getFireData\",\n    value: function getFireData() {\n      if (this.props.email == undefined || this.props.email == '') {\n        return;\n      }\n\n      var email = Lib.encodeEmail(this.props.email);\n      var db = firebase.firestore(); // firestore のオブジェクト取得\n\n      var ref = db.collection('tasks');\n      var self = this;\n      ref.get().then(function (querySnapshot) {\n        var d = [];\n        querySnapshot.forEach(function (doc, index, querySnapshot) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          d.push(Lib.deepCopy(doc.data())); // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n          // forEach の中で querySnapshot の length が取得できればいいが、、\n\n          self.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n              login: self.props.login,\n              username: self.props.username,\n              email: self.props.email,\n              data: d,\n              items: self.getItem(d)\n            }\n          });\n        });\n      });\n    }\n  }, {\n    key: \"getDateFromTimestamp\",\n    value: function getDateFromTimestamp(_timestamp) {\n      var _d = _timestamp ? new Date(_timestamp * 1000) : new Date();\n\n      var Y = _d.getFullYear();\n\n      var m = (\"0\" + (_d.getMonth() + 1)).slice(-2);\n\n      var d = (\"0\" + _d.getDate()).slice(-2);\n\n      var H = (\"0\" + _d.getHours()).slice(-2);\n\n      var i = (\"0\" + _d.getMinutes()).slice(-2);\n\n      var s = (\"0\" + _d.getSeconds()).slice(-2);\n\n      return \"\".concat(Y, \"/\").concat(m, \"/\").concat(d, \" \").concat(H, \":\").concat(i, \":\").concat(s);\n    } // data を元に表示項目を作成\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(data) {\n      console.log('data is');\n      console.log(data);\n\n      if (data == undefined) {\n        return;\n      }\n\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        res.push(__jsx(\"li\", {\n          key: data[i]['id'],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        }, data[i]['title'], __jsx(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          key: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, data[i]['detail']), __jsx(\"li\", {\n          key: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, getDateFromTimestamp(data[i]['deadline'].seconds)))));\n      }\n\n      return res;\n    } // データ表示ページの移動\n\n  }, {\n    key: \"go\",\n    value: function go(email) {\n      Router.push('/address_show?email=' + email);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, __jsx(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.items == [] ? __jsx(\"li\", {\n        key: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"no item.\") : this.props.items));\n    }\n  }]);\n\n  return Address;\n}(Component);\n\nAddress = connect(function (state) {\n  return state;\n})(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Address","props","fontSize","padding","logined","bind","getFireData","push","email","undefined","encodeEmail","db","firestore","ref","collection","self","get","then","querySnapshot","d","forEach","doc","index","console","log","id","data","deepCopy","dispatch","type","value","login","username","items","getItem","_timestamp","_d","Date","Y","getFullYear","m","getMonth","slice","getDate","H","getHours","i","getMinutes","s","getSeconds","res","length","getDateFromTimestamp","seconds","logouted","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // get data from Firebase\n    getFireData() {\n        if (this.props.email == undefined ||\n            this.props.email == '') { return;}\n        let email = Lib.encodeEmail(this.props.email);\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        let ref = db.collection('tasks');\n        let self = this;\n        ref.get()\n        .then(function(querySnapshot) {\n            let d = [];\n\n            querySnapshot.forEach((doc, index, querySnapshot) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            d.push(Lib.deepCopy(doc.data()));\n            \n            // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n            // forEach の中で querySnapshot の length が取得できればいいが、、\n            self.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: self.props.login,\n                    username: self.props.username,\n                    email: self.props.email,\n                    data: d,\n                    items: self.getItem(d)\n                    }\n            })\n            \n        })\n        \n        });\n    }\n\n    getDateFromTimestamp(_timestamp){\n        var _d = _timestamp ? new Date(_timestamp * 1000) : new Date();\n        \n        var Y = _d.getFullYear();\n        var m = (\"0\" + (_d.getMonth() + 1)).slice(-2);\n        var d = (\"0\" + _d.getDate()).slice(-2);\n        var H = (\"0\" + _d.getHours()).slice(-2);\n        var i = (\"0\" + _d.getMinutes()).slice(-2);\n        var s = (\"0\" + _d.getSeconds()).slice(-2);\n      \n        return `${Y}/${m}/${d} ${H}:${i}:${s}`;\n      }\n\n    // data を元に表示項目を作成\n    getItem(data) {\n        console.log('data is');\n        console.log(data);\n        if (data == undefined) {return;}\n        let res = [];\n        for (let i=0; i < data.length; i++){\n        res.push(<li key={data[i]['id']}>\n                    {data[i]['title']}\n                    <ul>\n                        <li key={1}>{data[i]['detail']}</li>\n                        <li key={2}>{getDateFromTimestamp(data[i]['deadline'].seconds)}</li>\n                    </ul>\n                </li>);\n        }\n        return res;\n    }\n    \n    // データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    render(){\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                 onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items == []\n                    ?\n                    <li key=\"0\">no item.</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state) => state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}