{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n  authDomain: \"polished-leaf-256709.firebaseapp.com\",\n  databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n  projectId: \"polished-leaf-256709\",\n  storageBucket: \"polished-leaf-256709.appspot.com\",\n  messagingSenderId: \"766279430691\",\n  appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n  measurementId: \"G-6M2NQ68H20\"\n}; // Initialize Firebase\n\nlet fireapp;\n\ntry {\n  fireapp = firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp;\nlet initial;\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    // User is signed in.\n    console.log('currentUserあり！');\n    console.log(firebase.auth().currentUser.displayName);\n  } else {\n    // No user is signed in.\n    console.log('currentUserなし！');\n    initial = {\n      login: false,\n      username: 'unknown',\n      email: '',\n      data: [],\n      items: []\n    };\n  }\n}); // reducer\n\nfunction fireReducer(state = initial, action) {\n  switch (action.type) {\n    // dummy\n    case 'UPDATE_USER':\n      return action.value;\n    // default\n\n    default:\n      return state;\n  }\n} // redux persist の設定\n\n\nconst persistConfig = {\n  key: 'root',\n  storage\n}; // create Persist Reducer\n\nconst persistedReducer = persistReducer(persistConfig, fireReducer); // initStore function\n\nfunction initStore(state = initial) {\n  return persistStore(createStore(persistedReducer, state, applyMiddleware(thunkMiddleware)));\n}\n\nexport { initStore };","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","persistStore","persistReducer","storage","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initializeApp","analytics","error","console","log","message","initial","auth","onAuthStateChanged","user","currentUser","displayName","login","username","email","data","items","fireReducer","state","action","type","value","persistConfig","key","persistedReducer","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAGA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,sCAFO;AAGnBC,EAAAA,WAAW,EAAE,6CAHM;AAInBC,EAAAA,SAAS,EAAE,sBAJQ;AAKnBC,EAAAA,aAAa,EAAE,kCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB,C,CAWA;;AACA,IAAIC,OAAJ;;AAEA,IAAI;AACAA,EAAAA,OAAO,GAAGb,QAAQ,CAACc,aAAT,CAAuBV,cAAvB,CAAV;AACAJ,EAAAA,QAAQ,CAACe,SAAT;AACH,CAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AAED,eAAeN,OAAf;AAEA,IAAIO,OAAJ;AACApB,QAAQ,CAACqB,IAAT,GAAgBC,kBAAhB,CAAmCC,IAAI,IAAI;AACzC,MAAIA,IAAJ,EAAU;AACR;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAQ,CAACqB,IAAT,GAAgBG,WAAhB,CAA4BC,WAAxC;AACD,GAJD,MAIO;AACL;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAE,IAAAA,OAAO,GAAG;AACNM,MAAAA,KAAK,EAAG,KADF;AAENC,MAAAA,QAAQ,EAAG,SAFL;AAGNC,MAAAA,KAAK,EAAG,EAHF;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,KAAK,EAAE;AALD,KAAV;AAOD;AACF,CAhBD,E,CAmBA;;AACA,SAASC,WAAT,CAAsBC,KAAK,GAAGZ,OAA9B,EAAuCa,MAAvC,EAA+C;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,aAAL;AACI,aAAOD,MAAM,CAACE,KAAd;AACJ;;AACA;AACI,aAAOH,KAAP;AANR;AAQH,C,CAED;;;AACA,MAAMI,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAG,MADY;AAElBlC,EAAAA;AAFkB,CAAtB,C,CAKA;;AACA,MAAMmC,gBAAgB,GAAGpC,cAAc,CAACkC,aAAD,EAAgBL,WAAhB,CAAvC,C,CAEA;;AACA,SAASQ,SAAT,CAAmBP,KAAK,GAAGZ,OAA3B,EAAoC;AAChC,SAAOnB,YAAY,CAACJ,WAAW,CAACyC,gBAAD,EAAmBN,KAAnB,EAC3BlC,eAAe,CAACC,eAAD,CADY,CAAZ,CAAnB;AACwC;;AAE5C,SAASwC,SAAT","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n    authDomain: \"polished-leaf-256709.firebaseapp.com\",\n    databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n    projectId: \"polished-leaf-256709\",\n    storageBucket: \"polished-leaf-256709.appspot.com\",\n    messagingSenderId: \"766279430691\",\n    appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n    measurementId: \"G-6M2NQ68H20\"\n};\n\n// Initialize Firebase\nlet fireapp;\n\ntry {\n    fireapp = firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n} catch (error) {\n    console.log(error.message);\n}\n\nexport default fireapp;\n\nlet initial;\nfirebase.auth().onAuthStateChanged(user => {\n  if (user) {\n    // User is signed in.\n    console.log('currentUserあり！')\n    console.log(firebase.auth().currentUser.displayName)\n  } else {\n    // No user is signed in.\n    console.log('currentUserなし！')\n    initial = {\n        login : false,\n        username : 'unknown',\n        email : '',\n        data: [],\n        items: []\n    }\n  }\n});\n\n\n// reducer\nfunction fireReducer (state = initial, action) {\n    switch (action.type){\n        // dummy\n        case 'UPDATE_USER':\n            return action.value;\n        // default\n        default:\n            return state;\n    }\n}\n\n// redux persist の設定\nconst persistConfig = {\n    key : 'root',\n    storage,\n}\n\n// create Persist Reducer\nconst persistedReducer = persistReducer(persistConfig, fireReducer)\n\n// initStore function\nfunction initStore(state = initial) {\n    return persistStore(createStore(persistedReducer, state,\n        applyMiddleware(thunkMiddleware)));}\n\nexport { initStore };"]},"metadata":{},"sourceType":"module"}