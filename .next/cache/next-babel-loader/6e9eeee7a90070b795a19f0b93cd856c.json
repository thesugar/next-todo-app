{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/Address.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.logined = this.logined.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    this.getFireData();\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // get data from Firebase\n\n\n  getFireData() {\n    if (this.props.email == undefined || this.props.email == '') {\n      return;\n    }\n\n    let email = Lib.encodeEmail(this.props.email);\n    let db = firebase.firestore(); // firestore のオブジェクト取得\n\n    let ref = db.collection('tasks');\n    let self = this;\n    ref.get().then(function (querySnapshot) {\n      let d = [];\n      querySnapshot.forEach((doc, index, querySnapshot) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        d.push(Lib.deepCopy(doc.data())); // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n        // forEach の中で querySnapshot の length が取得できればいいが、、\n\n        self.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: self.props.login,\n            username: self.props.username,\n            email: self.props.email,\n            data: d,\n            items: self.getItem(d)\n          }\n        });\n      });\n    });\n  } // data を元に表示項目を作成\n\n\n  getItem(data) {\n    console.log('data is');\n    console.log(data);\n\n    if (data == undefined) {\n      return;\n    }\n\n    let res = [];\n\n    for (let i = 0; i < data.length; i++) {\n      res.push(__jsx(\"li\", {\n        key: data[i]['id'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, data[i]['title'], __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, data[i]['detail']), __jsx(\"li\", {\n        key: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, data[i]['deadline'][0].toDate()))));\n    }\n\n    return res;\n  } // データ表示ページの移動\n\n\n  go(email) {\n    Router.push('/address_show?email=' + email);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.props.items == [] ? __jsx(\"li\", {\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"no item.\") : this.props.items));\n  }\n\n}\n\nAddress = connect(state => state)(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Address","constructor","props","fontSize","padding","logined","bind","getFireData","logouted","push","email","undefined","encodeEmail","db","firestore","ref","collection","self","get","then","querySnapshot","d","forEach","doc","index","console","log","id","data","deepCopy","dispatch","type","value","login","username","items","getItem","res","i","length","toDate","go","render","state"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAM5BO,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,mCALV;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKU;;AAEd,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH,GAT2B,CAW5B;;;AACAD,EAAAA,OAAO,GAAE;AACL,SAAKE,WAAL;AACH;;AAEDC,EAAAA,QAAQ,GAAE;AACNZ,IAAAA,MAAM,CAACa,IAAP,CAAY,UAAZ;AACH,GAlB2B,CAoB5B;;;AACAF,EAAAA,WAAW,GAAG;AACV,QAAI,KAAKL,KAAL,CAAWQ,KAAX,IAAoBC,SAApB,IACA,KAAKT,KAAL,CAAWQ,KAAX,IAAoB,EADxB,EAC4B;AAAE;AAAQ;;AACtC,QAAIA,KAAK,GAAGZ,GAAG,CAACc,WAAJ,CAAgB,KAAKV,KAAL,CAAWQ,KAA3B,CAAZ;AACA,QAAIG,EAAE,GAAGhB,QAAQ,CAACiB,SAAT,EAAT,CAJU,CAIqB;;AAE/B,QAAIC,GAAG,GAAGF,EAAE,CAACG,UAAH,CAAc,OAAd,CAAV;AACA,QAAIC,IAAI,GAAG,IAAX;AACAF,IAAAA,GAAG,CAACG,GAAJ,GACCC,IADD,CACM,UAASC,aAAT,EAAwB;AAC1B,UAAIC,CAAC,GAAG,EAAR;AAEAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,EAAaJ,aAAb,KAA+B;AACrD;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,EAAhB,EAAoB,MAApB,EAA4BJ,GAAG,CAACK,IAAJ,EAA5B;AACAP,QAAAA,CAAC,CAACZ,IAAF,CAAOX,GAAG,CAAC+B,QAAJ,CAAaN,GAAG,CAACK,IAAJ,EAAb,CAAP,EAHqD,CAKrD;AACA;;AACAX,QAAAA,IAAI,CAACf,KAAL,CAAW4B,QAAX,CAAoB;AAChBC,UAAAA,IAAI,EAAE,aADU;AAEhBC,UAAAA,KAAK,EAAE;AACHC,YAAAA,KAAK,EAAEhB,IAAI,CAACf,KAAL,CAAW+B,KADf;AAEHC,YAAAA,QAAQ,EAAEjB,IAAI,CAACf,KAAL,CAAWgC,QAFlB;AAGHxB,YAAAA,KAAK,EAAEO,IAAI,CAACf,KAAL,CAAWQ,KAHf;AAIHkB,YAAAA,IAAI,EAAEP,CAJH;AAKHc,YAAAA,KAAK,EAAElB,IAAI,CAACmB,OAAL,CAAaf,CAAb;AALJ;AAFS,SAApB;AAWH,OAlBG;AAoBH,KAxBD;AAyBH,GAtD2B,CAwD5B;;;AACAe,EAAAA,OAAO,CAACR,IAAD,EAAO;AACVH,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;;AACA,QAAIA,IAAI,IAAIjB,SAAZ,EAAuB;AAAC;AAAQ;;AAChC,QAAI0B,GAAG,GAAG,EAAV;;AACA,SAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAAGV,IAAI,CAACW,MAAvB,EAA+BD,CAAC,EAAhC,EAAmC;AACnCD,MAAAA,GAAG,CAAC5B,IAAJ,CAAS;AAAI,QAAA,GAAG,EAAEmB,IAAI,CAACU,CAAD,CAAJ,CAAQ,IAAR,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIV,IAAI,CAACU,CAAD,CAAJ,CAAQ,OAAR,CADJ,EAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaV,IAAI,CAACU,CAAD,CAAJ,CAAQ,QAAR,CAAb,CADJ,EAEI;AAAI,QAAA,GAAG,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAaV,IAAI,CAACU,CAAD,CAAJ,CAAQ,UAAR,EAAoB,CAApB,EAAuBE,MAAvB,EAAb,CAFJ,CAFH,CAAT;AAOC;;AACD,WAAOH,GAAP;AACH,GAxE2B,CA0E5B;;;AACAI,EAAAA,EAAE,CAAC/B,KAAD,EAAO;AACLd,IAAAA,MAAM,CAACa,IAAP,CAAY,yBAAyBC,KAArC;AACH;;AAEDgC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,OAAD;AAAS,MAAA,SAAS,EAAE,KAAKrC,OAAzB;AACC,MAAA,UAAU,EAAE,KAAKG,QADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKN,KAAL,CAAWiC,KAAX,IAAoB,EAApB,GAED;AAAI,MAAA,GAAG,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFC,GAID,KAAKjC,KAAL,CAAWiC,KALf,CAHJ,CADJ;AAcH;;AA9F2B;;AAiGhCnC,OAAO,GAAGL,OAAO,CAAEgD,KAAD,IAAWA,KAAZ,CAAP,CAA0B3C,OAA1B,CAAV;AACA,eAAeA,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // get data from Firebase\n    getFireData() {\n        if (this.props.email == undefined ||\n            this.props.email == '') { return;}\n        let email = Lib.encodeEmail(this.props.email);\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        let ref = db.collection('tasks');\n        let self = this;\n        ref.get()\n        .then(function(querySnapshot) {\n            let d = [];\n\n            querySnapshot.forEach((doc, index, querySnapshot) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            d.push(Lib.deepCopy(doc.data()));\n            \n            // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n            // forEach の中で querySnapshot の length が取得できればいいが、、\n            self.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: self.props.login,\n                    username: self.props.username,\n                    email: self.props.email,\n                    data: d,\n                    items: self.getItem(d)\n                    }\n            })\n            \n        })\n        \n        });\n    }\n\n    // data を元に表示項目を作成\n    getItem(data) {\n        console.log('data is');\n        console.log(data);\n        if (data == undefined) {return;}\n        let res = [];\n        for (let i=0; i < data.length; i++){\n        res.push(<li key={data[i]['id']}>\n                    {data[i]['title']}\n                    <ul>\n                        <li key={1}>{data[i]['detail']}</li>\n                        <li key={2}>{data[i]['deadline'][0].toDate()}</li>\n                    </ul>\n                </li>);\n        }\n        return res;\n    }\n    \n    // データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    render(){\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                 onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items == []\n                    ?\n                    <li key=\"0\">no item.</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state) => state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}