{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/Address.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Link from 'next/link';\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.logined = this.logined.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    this.getFireData();\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // get data from Firebase\n\n\n  getFireData() {\n    if (firebase.auth().currentUser == undefined || firebase.auth().currentUser == null) {\n      return;\n    }\n\n    let db = firebase.firestore(); // firestore のオブジェクト取得\n\n    let ref = db.collection('tasks');\n    let self = this;\n    ref.get().then(function (querySnapshot) {\n      let d = [];\n      querySnapshot.forEach((doc, index, querySnapshot) => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        d.push(Lib.deepCopy(doc.data())); // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n        // forEach の中で querySnapshot の length が取得できればいいが、、\n\n        self.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: self.props.login,\n            username: self.props.username,\n            email: self.props.email,\n            data: d,\n            items: self.getItem(d)\n          }\n        });\n      });\n    });\n  } // data を元に表示項目を作成\n\n\n  getItem(data) {\n    console.log('data is');\n    console.log(data);\n\n    if (data == undefined) {\n      return;\n    }\n\n    let res = [];\n\n    for (let i = 0; i < data.length; i++) {\n      res.push(__jsx(\"li\", {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: \"/p/[id]\",\n        as: `/p/${data[i]['title']}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, data[i]['title'])), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, __jsx(\"li\", {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, data[i]['detail']), __jsx(\"li\", {\n        key: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, new Date(data[i]['deadline'].seconds * 1000).toLocaleDateString()))));\n    }\n\n    return res;\n  } // データ表示ページの移動\n\n\n  go(email) {\n    Router.push('/address_show?email=' + email);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.props.items === [] || this.props.items === undefined || this.props.items === null ? __jsx(\"li\", {\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"no item.\") : this.props.items));\n  }\n\n}\n\nAddress = connect(state => state)(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Link","Address","constructor","props","fontSize","padding","logined","bind","getFireData","logouted","push","auth","currentUser","undefined","db","firestore","ref","collection","self","get","then","querySnapshot","d","forEach","doc","index","console","log","id","data","deepCopy","dispatch","type","value","login","username","email","items","getItem","res","i","length","Date","seconds","toLocaleDateString","go","render","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Link from 'next/link';\n\nclass Address extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // get data from Firebase\n    getFireData() {\n        if (firebase.auth().currentUser == undefined ||\n            firebase.auth().currentUser == null) { return;}\n\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        let ref = db.collection('tasks');\n        let self = this;\n        ref.get()\n        .then(function(querySnapshot) {\n            let d = [];\n\n            querySnapshot.forEach((doc, index, querySnapshot) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            d.push(Lib.deepCopy(doc.data()));\n            \n            // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n            // forEach の中で querySnapshot の length が取得できればいいが、、\n            self.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: self.props.login,\n                    username: self.props.username,\n                    email: self.props.email,\n                    data: d,\n                    items: self.getItem(d)\n                    }\n            })\n            \n        })\n        \n        });\n    }\n\n    // data を元に表示項目を作成\n    getItem(data) {\n\n        console.log('data is');\n        console.log(data);\n        if (data == undefined) {return;}\n        let res = [];\n        for (let i=0; i < data.length; i++){\n        res.push(<li key={i}>\n                <Link href=\"/p/[id]\" as={`/p/${data[i]['title']}`}>\n                    <a>{data[i]['title']}</a>\n                 </Link>\n                    <ul>\n                        <li key={1}>{data[i]['detail']}</li>\n                        <li key={2}>{new Date(data[i]['deadline'].seconds * 1000).toLocaleDateString()}</li>\n                    </ul>\n                </li>);\n        }\n        return res;\n    }\n    \n    // データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    render(){\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                 onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items === [] || this.props.items === undefined || this.props.items === null\n                    ?\n                    <li key=\"0\">no item.</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state) => state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}