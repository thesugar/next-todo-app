{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/Address.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Link from 'next/link';\n\nvar Address =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Address, _Component);\n\n  function Address(props) {\n    var _this;\n\n    _classCallCheck(this, Address);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Address).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    _this.logined = _this.logined.bind(_assertThisInitialized(_this));\n    return _this;\n  } // login, logout 処理\n\n\n  _createClass(Address, [{\n    key: \"logined\",\n    value: function logined() {\n      this.getFireData();\n    }\n  }, {\n    key: \"logouted\",\n    value: function logouted() {\n      Router.push('/address');\n    } // get data from Firebase\n\n  }, {\n    key: \"getFireData\",\n    value: function getFireData() {\n      if (firebase.auth().currentUser == undefined || firebase.auth().currentUser == null) {\n        return;\n      }\n\n      var db = firebase.firestore(); // firestore のオブジェクト取得\n\n      var ref = db.collection('tasks');\n      var self = this;\n      ref.get().then(function (querySnapshot) {\n        var d = [];\n        querySnapshot.forEach(function (doc, index, querySnapshot) {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          d.push(Lib.deepCopy(doc.data())); // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n          // forEach の中で querySnapshot の length が取得できればいいが、、\n\n          self.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n              login: self.props.login,\n              username: self.props.username,\n              email: self.props.email,\n              data: d,\n              items: self.getItem(d)\n            }\n          });\n        });\n      });\n    } // data を元に表示項目を作成\n\n  }, {\n    key: \"getItem\",\n    value: function getItem(data) {\n      var handler = function handler(arg) {\n        Router.push({\n          pathname: '/p/[id]',\n          query: {\n            name: arg['title']\n          }\n        });\n      };\n\n      console.log('data is');\n      console.log(data);\n\n      if (data == undefined) {\n        return;\n      }\n\n      var res = [];\n\n      for (var i = 0; i < data.length; i++) {\n        res.push(__jsx(\"li\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          onClick: handler(data[i]),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, \"here\"), __jsx(Link, {\n          href: \"/p/[id]\",\n          as: \"/p/\".concat(data[i]['title']),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        }, data[i]['title'])), __jsx(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }, __jsx(\"li\", {\n          key: 1,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, data[i]['detail']), __jsx(\"li\", {\n          key: 2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, new Date(data[i]['deadline'].seconds * 1000).toLocaleDateString()))));\n      }\n\n      return res;\n    } // データ表示ページの移動\n\n  }, {\n    key: \"go\",\n    value: function go(email) {\n      Router.push('/address_show?email=' + email);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, __jsx(Account, {\n        onLogined: this.logined,\n        onLogouted: this.logouted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), __jsx(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, this.props.items == [] ? __jsx(\"li\", {\n        key: \"0\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"no item.\") : this.props.items));\n    }\n  }]);\n\n  return Address;\n}(Component);\n\nAddress = connect(function (state) {\n  return state;\n})(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Link","Address","props","fontSize","padding","logined","bind","getFireData","push","auth","currentUser","undefined","db","firestore","ref","collection","self","get","then","querySnapshot","d","forEach","doc","index","console","log","id","data","deepCopy","dispatch","type","value","login","username","email","items","getItem","handler","arg","pathname","query","name","res","i","length","Date","seconds","toLocaleDateString","logouted","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\nimport Link from 'next/link';\n\nclass Address extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // get data from Firebase\n    getFireData() {\n        if (firebase.auth().currentUser == undefined ||\n            firebase.auth().currentUser == null) { return;}\n\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        let ref = db.collection('tasks');\n        let self = this;\n        ref.get()\n        .then(function(querySnapshot) {\n            let d = [];\n\n            querySnapshot.forEach((doc, index, querySnapshot) => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            d.push(Lib.deepCopy(doc.data()));\n            \n            // d.push してるのにループのたびにdispatchしてるから無駄な部分はある\n            // forEach の中で querySnapshot の length が取得できればいいが、、\n            self.props.dispatch({\n                type: 'UPDATE_USER',\n                value: {\n                    login: self.props.login,\n                    username: self.props.username,\n                    email: self.props.email,\n                    data: d,\n                    items: self.getItem(d)\n                    }\n            })\n            \n        })\n        \n        });\n    }\n\n    // data を元に表示項目を作成\n    getItem(data) {\n\n        const handler = (arg) => {\n            Router.push({\n              pathname: '/p/[id]',\n              query: { name: arg['title'] },\n            })\n        }\n\n        console.log('data is');\n        console.log(data);\n        if (data == undefined) {return;}\n        let res = [];\n        for (let i=0; i < data.length; i++){\n        res.push(<li key={i}>\n                <span onClick={handler(data[i])}>here</span>\n                <Link href=\"/p/[id]\" as={`/p/${data[i]['title']}`}>\n                    <a>{data[i]['title']}</a>\n                 </Link>\n                    <ul>\n                        <li key={1}>{data[i]['detail']}</li>\n                        <li key={2}>{new Date(data[i]['deadline'].seconds * 1000).toLocaleDateString()}</li>\n                    </ul>\n                </li>);\n        }\n        return res;\n    }\n    \n    // データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    render(){\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                 onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items == []\n                    ?\n                    <li key=\"0\">no item.</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state) => state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}