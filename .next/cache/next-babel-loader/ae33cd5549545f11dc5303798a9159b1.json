{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-todo-app/components/Address.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.logined = this.logined.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    this.getFireData();\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // get data from Firebase\n\n\n  getFireData() {\n    if (this.props.email == undefined || this.props.email == '') {\n      return;\n    }\n\n    let email = Lib.encodeEmail(this.props.email);\n    let db = firebase.firestore(); // firestore のオブジェクト取得\n\n    let ref = db.collection('tasks');\n    let self = this;\n    ref.get().then(function (querySnapshot) {\n      let d = [];\n      querySnapshot.forEach(doc => {\n        // doc.data() is never undefined for query doc snapshots\n        console.log(doc.id, \" => \", doc.data());\n        d.push(Lib.deepCopy(doc.data()));\n        console.log('d.length is');\n        console.log(d.length);\n        console.log('querysnapshot.lengh(this) is');\n        console.log(this.length);\n\n        if (d.length === querySnapshot.length) {\n          self.props.dispatch({\n            type: 'UPDATE_USER',\n            value: {\n              login: self.props.login,\n              username: self.props.username,\n              email: self.props.email,\n              data: d,\n              items: self.getItem(d)\n            }\n          });\n        }\n      }, querySnapshot);\n    });\n  } // data を元に表示項目を作成\n\n\n  getItem(data) {\n    console.log('data is');\n    console.log(data);\n\n    if (data == undefined) {\n      return;\n    }\n\n    let res = [];\n\n    for (i = 0; i < data.length; i++) {\n      res.push(__jsx(\"li\", {\n        key: data[i]['id'],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, data[i]['title']));\n    }\n\n    return res;\n  } // データ表示ページの移動\n\n\n  go(email) {\n    Router.push('/address_show?email=' + email);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, __jsx(Account, {\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), __jsx(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, this.props.items == [] ? __jsx(\"li\", {\n      key: \"0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"no item.\") : this.props.items));\n  }\n\n}\n\nAddress = connect(state => state)(Address);\nexport default Address;","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/components/Address.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","Address","constructor","props","fontSize","padding","logined","bind","getFireData","logouted","push","email","undefined","encodeEmail","db","firestore","ref","collection","self","get","then","querySnapshot","d","forEach","doc","console","log","id","data","deepCopy","length","dispatch","type","value","login","username","items","getItem","res","i","go","render","state"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass Address extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        this.logined = this.logined.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        this.getFireData();\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // get data from Firebase\n    getFireData() {\n        if (this.props.email == undefined ||\n            this.props.email == '') { return;}\n        let email = Lib.encodeEmail(this.props.email);\n        let db = firebase.firestore(); // firestore のオブジェクト取得\n    \n        let ref = db.collection('tasks');\n        let self = this;\n        ref.get()\n        .then(function(querySnapshot) {\n            let d = [];\n            querySnapshot.forEach(doc => {\n            // doc.data() is never undefined for query doc snapshots\n            console.log(doc.id, \" => \", doc.data());\n            d.push(Lib.deepCopy(doc.data()));\n            \n            console.log('d.length is')\n            console.log(d.length)\n            console.log('querysnapshot.lengh(this) is')\n            console.log(this.length)\n            if (d.length === querySnapshot.length){\n                self.props.dispatch({\n                    type: 'UPDATE_USER',\n                    value: {\n                        login: self.props.login,\n                        username: self.props.username,\n                        email: self.props.email,\n                        data: d,\n                        items: self.getItem(d)\n                       }\n                })\n            }\n        }, querySnapshot)\n        });\n    }\n\n    // data を元に表示項目を作成\n    getItem(data) {\n        console.log('data is');\n        console.log(data);\n        if (data == undefined) {return;}\n        let res = [];\n        for (i=0; i < data.length; i++){\n        res.push(<li key={data[i]['id']}>\n                    {data[i]['title']}\n                </li>);\n        }\n        return res;\n    }\n    \n    // データ表示ページの移動\n    go(email){\n        Router.push('/address_show?email=' + email);\n    }\n\n    render(){\n        return (\n            <div>\n                <Account onLogined={this.logined}\n                 onLogouted={this.logouted} />\n                <ul>\n                    {this.props.items == []\n                    ?\n                    <li key=\"0\">no item.</li>\n                    :\n                    this.props.items\n                    }\n                </ul>\n            </div>\n        )\n    }\n}\n\nAddress = connect((state) => state)(Address);\nexport default Address;"]},"metadata":{},"sourceType":"module"}