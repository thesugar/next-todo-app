{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/thesugar/next-firebase-memo-app/components/AddressAdd.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass AddressAdd extends Component {\n  constructor(props) {\n    super(props); //if (this.props.login == false) {\n    //    Router.push('/address');\n    //}\n\n    _defineProperty(this, \"style\", {\n      fontSize: \"12pt\",\n      padding: \"5px 10px\"\n    });\n\n    this.state = {\n      name: '',\n      email: '',\n      tel: '',\n      memo: '',\n      message: 'データを入力してください。'\n    };\n    this.logined = this.logined.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeTel = this.onChangeTel.bind(this);\n    this.onChangeMemo = this.onChangeMemo.bind(this);\n    this.doAction = this.doAction.bind(this);\n  } // login, logout 処理\n\n\n  logined() {\n    console.log('logined.');\n  }\n\n  logouted() {\n    Router.push('/address');\n  } // フィールド入力処理\n\n\n  onChangeName(e) {\n    this.setState({\n      name: e.target.value\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value\n    });\n  }\n\n  onChangeTel(e) {\n    this.setState({\n      tel: e.target.value\n    });\n  }\n\n  onChangeMemo(e) {\n    this.setState({\n      memo: e.target.value\n    });\n  } // データの登録処理\n\n\n  doAction(e) {\n    let key = this.state.email;\n    let data = {\n      name: this.state.name,\n      tel: this.state.tel,\n      memo: this.state.memo\n    };\n    let db = firebase.firestore(); // Firestore の登録処理\n\n    db.collection('address' + Lib.encodeEmail(this.props.email) + '/' + Lib.encodeEmail(this.state.email)).add({\n      data\n    }).then(doc => {\n      console.log(`追加に成功しました (${doc.id})`);\n    }).catch(error => {\n      console.log(`追加に失敗しました (${error})`);\n    });\n    this.setState({\n      name: '',\n      email: '',\n      tel: '',\n      memo: '',\n      message: '* 登録しました。'\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, __jsx(Account, {\n      self: this,\n      onLogined: this.logined,\n      onLogouted: this.logouted,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), __jsx(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, this.state.message), this.props.login ? __jsx(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, __jsx(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, \"name:\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      size: \"30\",\n      value: this.state.name,\n      onChange: this.onChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, \"email:\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      size: \"30\",\n      value: this.state.email,\n      onChange: this.onChangeEmail,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"tel:\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      size: \"30\",\n      value: this.state.tel,\n      onChange: this.onChangeTel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"memo:\"), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"text\",\n      size: \"30\",\n      value: this.state.memo,\n      onChange: this.onChangeMemo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }))), __jsx(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, __jsx(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), __jsx(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      onClick: this.doAction,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Add\"))))) : __jsx(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"please login...\"));\n  }\n\n}\n\nAddressAdd = connect(state => state)(AddressAdd);\nexport default AddressAdd;","map":{"version":3,"sources":["/Users/thesugar/next-firebase-memo-app/components/AddressAdd.js"],"names":["React","Component","connect","Router","firebase","Lib","Account","AddressAdd","constructor","props","fontSize","padding","state","name","email","tel","memo","message","logined","bind","onChangeName","onChangeEmail","onChangeTel","onChangeMemo","doAction","console","log","logouted","push","e","setState","target","value","key","data","db","firestore","collection","encodeEmail","add","then","doc","id","catch","error","render","login"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport Router from 'next/router';\nimport firebase from \"firebase\";\nimport Lib from '../static/address_lib';\nimport Account from '../components/Account';\n\nclass AddressAdd extends Component {\n    style = {\n        fontSize: \"12pt\",\n        padding: \"5px 10px\"\n    }\n\n    constructor(props){\n        super(props);\n        //if (this.props.login == false) {\n        //    Router.push('/address');\n        //}\n        this.state = {\n            name: '',\n            email: '',\n            tel: '',\n            memo: '',\n            message: 'データを入力してください。'\n        }\n        this.logined = this.logined.bind(this);\n        this.onChangeName = this.onChangeName.bind(this);\n        this.onChangeEmail = this.onChangeEmail.bind(this);\n        this.onChangeTel = this.onChangeTel.bind(this);\n        this.onChangeMemo = this.onChangeMemo.bind(this);\n        this.doAction = this.doAction.bind(this);\n    }\n\n    // login, logout 処理\n    logined(){\n        console.log('logined.');\n    }\n\n    logouted(){\n        Router.push('/address');\n    }\n\n    // フィールド入力処理\n    onChangeName(e) {\n        this.setState({name: e.target.value});\n    }\n\n    onChangeEmail(e){\n        this.setState({email: e.target.value});\n    }\n\n    onChangeTel(e){\n        this.setState({tel: e.target.value});\n    }\n\n    onChangeMemo(e){\n        this.setState({memo: e.target.value});\n    }\n\n    // データの登録処理\n    doAction(e){\n        let key = this.state.email;\n        let data = {\n            name: this.state.name,\n            tel: this.state.tel,\n            memo: this.state.memo\n        }\n        let db = firebase.firestore();\n        // Firestore の登録処理\n        db.collection('address'+Lib.encodeEmail(this.props.email)+'/'+Lib.encodeEmail(this.state.email)).add({\n            data\n        })\n        .then((doc) => {\n            console.log(`追加に成功しました (${doc.id})`);\n        })\n        .catch((error) => {\n            console.log(`追加に失敗しました (${error})`);\n        });\n\n        this.setState({\n            name: '',\n            email: '',\n            tel: '',\n            memo: '',\n            message: '* 登録しました。'\n        })\n    }\n\n    render(){\n        return (\n            <div>\n                <Account self={this} onLogined={this.logined}\n                onLogouted={this.logouted} />\n                <hr />\n                <p>{this.state.message}</p>\n                {this.props.login\n                ?\n                <table>\n                    <tbody>\n                        <tr>\n                            <th>name:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.name}\n                            onChange={this.onChangeName}/></td>\n                        </tr>\n                        <tr>\n                            <th>email:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.email}\n                            onChange={this.onChangeEmail}/></td>\n                        </tr>\n                        <tr>\n                            <th>tel:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.tel}\n                            onChange={this.onChangeTel}/></td>\n                        </tr>\n                        <tr>\n                            <th>memo:</th>\n                            <td><input type=\"text\" size=\"30\"\n                            value={this.state.memo}\n                            onChange={this.onChangeMemo}/></td>\n                        </tr>\n                        <tr>\n                            <th></th>\n                            <td><button onClick={this.doAction}>\n                                Add</button></td>\n                        </tr>\n                    </tbody>\n                </table>\n                :\n                <p>please login...</p>\n                }\n            </div>\n        );\n    }\n}\n\nAddressAdd = connect((state) => state) (AddressAdd);\nexport default AddressAdd;"]},"metadata":{},"sourceType":"module"}