{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\nvar firebaseConfig = {\n  apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n  authDomain: \"polished-leaf-256709.firebaseapp.com\",\n  databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n  projectId: \"polished-leaf-256709\",\n  storageBucket: \"polished-leaf-256709.appspot.com\",\n  messagingSenderId: \"766279430691\",\n  appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n  measurementId: \"G-6M2NQ68H20\"\n}; // Initialize Firebase\n\nvar fireapp;\nvar initial;\n\ntry {\n  fireapp = firebase.initializeApp(firebaseConfig);\n  initial = {\n    login: false,\n    username: 'Guest',\n    email: '',\n    data: [],\n    items: []\n  };\n  firebase.analytics();\n} catch (error) {\n  console.log(error.message);\n}\n\nexport default fireapp;\n/*\nlet initial = {\n    login : firebase.auth().currentUser ? true: false,\n    username : firebase.auth().currentUser ? firebase.auth().currentUser.displayName : 'Guest',\n    email : firebase.auth().currentUser ? firebase.auth().currentUser.email : '',\n    data: [],\n    items: []\n}\n*/\n// reducer\n\nfunction fireReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    // dummy\n    case 'UPDATE_USER':\n      return action.value;\n    // default\n\n    default:\n      return state;\n  }\n} // initStore function\n\n\nexport function initStore() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initial;\n  return createStore(fireReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["/Users/thesugar/next-todo-app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireapp","initial","initializeApp","login","username","email","data","items","analytics","error","console","log","message","fireReducer","state","action","type","value","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,MAAM,EAAE,yCADW;AAEnBC,EAAAA,UAAU,EAAE,sCAFO;AAGnBC,EAAAA,WAAW,EAAE,6CAHM;AAInBC,EAAAA,SAAS,EAAE,sBAJQ;AAKnBC,EAAAA,aAAa,EAAE,kCALI;AAMnBC,EAAAA,iBAAiB,EAAE,cANA;AAOnBC,EAAAA,KAAK,EAAE,2CAPY;AAQnBC,EAAAA,aAAa,EAAE;AARI,CAAvB,C,CAWA;;AACA,IAAIC,OAAJ;AACA,IAAIC,OAAJ;;AACA,IAAI;AACAD,EAAAA,OAAO,GAAGV,QAAQ,CAACY,aAAT,CAAuBX,cAAvB,CAAV;AACAU,EAAAA,OAAO,GAAG;AACNE,IAAAA,KAAK,EAAG,KADF;AAENC,IAAAA,QAAQ,EAAG,OAFL;AAGNC,IAAAA,KAAK,EAAG,EAHF;AAINC,IAAAA,IAAI,EAAE,EAJA;AAKNC,IAAAA,KAAK,EAAE;AALD,GAAV;AAOAjB,EAAAA,QAAQ,CAACkB,SAAT;AACH,CAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;;AAED,eAAeZ,OAAf;AAEA;;;;;;;;;AAWA;;AACA,SAASa,WAAT,GAA+C;AAAA,MAAzBC,KAAyB,uEAAjBb,OAAiB;AAAA,MAARc,MAAQ;;AAC3C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,aAAL;AACI,aAAOD,MAAM,CAACE,KAAd;AACJ;;AACA;AACI,aAAOH,KAAP;AANR;AAQH,C,CAED;;;AACA,OAAO,SAASI,SAAT,GAAoC;AAAA,MAAjBJ,KAAiB,uEAATb,OAAS;AACvC,SAAOd,WAAW,CAAC0B,WAAD,EAAcC,KAAd,EACd1B,eAAe,CAACC,eAAD,CADD,CAAlB;AACuC","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyA5tM4PcANnpIJk-vYnYnL-q26QBhZR4zk\",\n    authDomain: \"polished-leaf-256709.firebaseapp.com\",\n    databaseURL: \"https://polished-leaf-256709.firebaseio.com\",\n    projectId: \"polished-leaf-256709\",\n    storageBucket: \"polished-leaf-256709.appspot.com\",\n    messagingSenderId: \"766279430691\",\n    appId: \"1:766279430691:web:153ad2000da94cc7617796\",\n    measurementId: \"G-6M2NQ68H20\"\n};\n\n// Initialize Firebase\nlet fireapp;\nlet initial;\ntry {\n    fireapp = firebase.initializeApp(firebaseConfig);\n    initial = {\n        login : false,\n        username : 'Guest',\n        email : '',\n        data: [],\n        items: []       \n    }\n    firebase.analytics();\n} catch (error) {\n    console.log(error.message);\n}\n\nexport default fireapp;\n\n/*\nlet initial = {\n    login : firebase.auth().currentUser ? true: false,\n    username : firebase.auth().currentUser ? firebase.auth().currentUser.displayName : 'Guest',\n    email : firebase.auth().currentUser ? firebase.auth().currentUser.email : '',\n    data: [],\n    items: []\n}\n*/\n\n\n// reducer\nfunction fireReducer (state = initial, action) {\n    switch (action.type){\n        // dummy\n        case 'UPDATE_USER':\n            return action.value;\n        // default\n        default:\n            return state;\n    }\n}\n\n// initStore function\nexport function initStore(state = initial) {\n    return createStore(fireReducer, state,\n        applyMiddleware(thunkMiddleware));}"]},"metadata":{},"sourceType":"module"}